name: CI/CD - K8s Deploy via Terraform

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  FRONTEND_IMAGE: samikshav/full-stack-app-frontend:latest
  BACKEND_IMAGE: samikshav/full-stack-app-backend:latest
  KUBECONFIG_FILE: kubeconfig.yaml

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build & Push Frontend Image
        run: |
          docker build -t $FRONTEND_IMAGE ./docker/frontend
          docker push $FRONTEND_IMAGE

      - name: Build & Push Backend Image
        run: |
          docker build -t $BACKEND_IMAGE ./docker/backend
          docker push $BACKEND_IMAGE

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Copy kubeconfig from EC2
        run: |
          echo "${{ secrets.EC2_KEY }}" > ec2-key.pem
          chmod 400 ec2-key.pem
          scp -o StrictHostKeyChecking=no -i ec2-key.pem ec2-user@${{ secrets.EC2_PUBLIC_IP }}:/home/ec2-user/kubeconfig.yaml kubeconfig.yaml

      - name: Deploy to Kubernetes
        run: |
          mkdir -p ~/.kube
          cp kubeconfig.yaml ~/.kube/config
          export KUBECONFIG=~/.kube/config
          kubectl get nodes
          kubectl apply -f ./k8s-manifests
